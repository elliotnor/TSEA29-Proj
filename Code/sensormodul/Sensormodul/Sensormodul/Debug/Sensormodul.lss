
Sensormodul.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000098a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000916  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  0000098a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000098a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  000009fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010c5  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b22  00000000  00000000  00001bc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000795  00000000  00000000  000026e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000174  00000000  00000000  00002e78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000061b  00000000  00000000  00002fec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000e4  00000000  00000000  00003607  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000036eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
   2:	00 00       	nop
   4:	94 c0       	rjmp	.+296    	; 0x12e <__bad_interrupt>
   6:	00 00       	nop
   8:	92 c0       	rjmp	.+292    	; 0x12e <__bad_interrupt>
   a:	00 00       	nop
   c:	90 c0       	rjmp	.+288    	; 0x12e <__bad_interrupt>
   e:	00 00       	nop
  10:	8e c0       	rjmp	.+284    	; 0x12e <__bad_interrupt>
  12:	00 00       	nop
  14:	8c c0       	rjmp	.+280    	; 0x12e <__bad_interrupt>
  16:	00 00       	nop
  18:	8a c0       	rjmp	.+276    	; 0x12e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	88 c0       	rjmp	.+272    	; 0x12e <__bad_interrupt>
  1e:	00 00       	nop
  20:	86 c0       	rjmp	.+268    	; 0x12e <__bad_interrupt>
  22:	00 00       	nop
  24:	84 c0       	rjmp	.+264    	; 0x12e <__bad_interrupt>
  26:	00 00       	nop
  28:	82 c0       	rjmp	.+260    	; 0x12e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	80 c0       	rjmp	.+256    	; 0x12e <__bad_interrupt>
  2e:	00 00       	nop
  30:	7e c0       	rjmp	.+252    	; 0x12e <__bad_interrupt>
  32:	00 00       	nop
  34:	7c c0       	rjmp	.+248    	; 0x12e <__bad_interrupt>
  36:	00 00       	nop
  38:	7a c0       	rjmp	.+244    	; 0x12e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	78 c0       	rjmp	.+240    	; 0x12e <__bad_interrupt>
  3e:	00 00       	nop
  40:	76 c0       	rjmp	.+236    	; 0x12e <__bad_interrupt>
  42:	00 00       	nop
  44:	74 c0       	rjmp	.+232    	; 0x12e <__bad_interrupt>
  46:	00 00       	nop
  48:	72 c0       	rjmp	.+228    	; 0x12e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	70 c0       	rjmp	.+224    	; 0x12e <__bad_interrupt>
  4e:	00 00       	nop
  50:	6e c0       	rjmp	.+220    	; 0x12e <__bad_interrupt>
  52:	00 00       	nop
  54:	6c c0       	rjmp	.+216    	; 0x12e <__bad_interrupt>
  56:	00 00       	nop
  58:	6a c0       	rjmp	.+212    	; 0x12e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	68 c0       	rjmp	.+208    	; 0x12e <__bad_interrupt>
  5e:	00 00       	nop
  60:	66 c0       	rjmp	.+204    	; 0x12e <__bad_interrupt>
  62:	00 00       	nop
  64:	64 c0       	rjmp	.+200    	; 0x12e <__bad_interrupt>
  66:	00 00       	nop
  68:	62 c0       	rjmp	.+196    	; 0x12e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	60 c0       	rjmp	.+192    	; 0x12e <__bad_interrupt>
  6e:	00 00       	nop
  70:	5e c0       	rjmp	.+188    	; 0x12e <__bad_interrupt>
  72:	00 00       	nop
  74:	5c c0       	rjmp	.+184    	; 0x12e <__bad_interrupt>
  76:	00 00       	nop
  78:	5a c0       	rjmp	.+180    	; 0x12e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	58 c0       	rjmp	.+176    	; 0x12e <__bad_interrupt>
  7e:	00 00       	nop
  80:	56 c0       	rjmp	.+172    	; 0x12e <__bad_interrupt>
  82:	00 00       	nop
  84:	54 c0       	rjmp	.+168    	; 0x12e <__bad_interrupt>
  86:	00 00       	nop
  88:	52 c0       	rjmp	.+164    	; 0x12e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	07 63       	ori	r16, 0x37	; 55
  8e:	42 36       	cpi	r20, 0x62	; 98
  90:	b7 9b       	sbis	0x16, 7	; 22
  92:	d8 a7       	std	Y+40, r29	; 0x28
  94:	1a 39       	cpi	r17, 0x9A	; 154
  96:	68 56       	subi	r22, 0x68	; 104
  98:	18 ae       	std	Y+56, r1	; 0x38
  9a:	ba ab       	std	Y+50, r27	; 0x32
  9c:	55 8c       	ldd	r5, Z+29	; 0x1d
  9e:	1d 3c       	cpi	r17, 0xCD	; 205
  a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
  a2:	57 63       	ori	r21, 0x37	; 55
  a4:	bd 6d       	ori	r27, 0xDD	; 221
  a6:	ed fd       	.word	0xfded	; ????
  a8:	75 3e       	cpi	r23, 0xE5	; 229
  aa:	f6 17       	cp	r31, r22
  ac:	72 31       	cpi	r23, 0x12	; 18
  ae:	bf 00       	.word	0x00bf	; ????
  b0:	00 00       	nop
  b2:	80 3f       	cpi	r24, 0xF0	; 240
  b4:	08 00       	.word	0x0008	; ????
  b6:	00 00       	nop
  b8:	be 92       	st	-X, r11
  ba:	24 49       	sbci	r18, 0x94	; 148
  bc:	12 3e       	cpi	r17, 0xE2	; 226
  be:	ab aa       	std	Y+51, r10	; 0x33
  c0:	aa 2a       	or	r10, r26
  c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
  c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
  c6:	4c 3e       	cpi	r20, 0xEC	; 236
  c8:	00 00       	nop
  ca:	00 80       	ld	r0, Z
  cc:	be ab       	std	Y+54, r27	; 0x36
  ce:	aa aa       	std	Y+50, r10	; 0x32
  d0:	aa 3e       	cpi	r26, 0xEA	; 234
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	bf 00       	.word	0x00bf	; ????
  d8:	00 00       	nop
  da:	80 3f       	cpi	r24, 0xF0	; 240
  dc:	00 00       	nop
  de:	00 00       	nop
  e0:	00 08       	sbc	r0, r0
  e2:	41 78       	andi	r20, 0x81	; 129
  e4:	d3 bb       	out	0x13, r29	; 19
  e6:	43 87       	std	Z+11, r20	; 0x0b
  e8:	d1 13       	cpse	r29, r17
  ea:	3d 19       	sub	r19, r13
  ec:	0e 3c       	cpi	r16, 0xCE	; 206
  ee:	c3 bd       	out	0x23, r28	; 35
  f0:	42 82       	std	Z+2, r4	; 0x02
  f2:	ad 2b       	or	r26, r29
  f4:	3e 68       	ori	r19, 0x8E	; 142
  f6:	ec 82       	std	Y+4, r14	; 0x04
  f8:	76 be       	out	0x36, r7	; 54
  fa:	d9 8f       	std	Y+25, r29	; 0x19
  fc:	e1 a9       	ldd	r30, Z+49	; 0x31
  fe:	3e 4c       	sbci	r19, 0xCE	; 206
 100:	80 ef       	ldi	r24, 0xF0	; 240
 102:	ff be       	out	0x3f, r15	; 63
 104:	01 c4       	rjmp	.+2050   	; 0x908 <log+0x76>
 106:	ff 7f       	andi	r31, 0xFF	; 255
 108:	3f 00       	.word	0x003f	; ????
 10a:	00 00       	nop
	...

0000010e <__ctors_end>:
 10e:	11 24       	eor	r1, r1
 110:	1f be       	out	0x3f, r1	; 63
 112:	cf ef       	ldi	r28, 0xFF	; 255
 114:	d0 e4       	ldi	r29, 0x40	; 64
 116:	de bf       	out	0x3e, r29	; 62
 118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_clear_bss>:
 11a:	21 e0       	ldi	r18, 0x01	; 1
 11c:	a0 e0       	ldi	r26, 0x00	; 0
 11e:	b1 e0       	ldi	r27, 0x01	; 1
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	ac 30       	cpi	r26, 0x0C	; 12
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	80 d0       	rcall	.+256    	; 0x22c <main>
 12c:	f2 c3       	rjmp	.+2020   	; 0x912 <_exit>

0000012e <__bad_interrupt>:
 12e:	68 cf       	rjmp	.-304    	; 0x0 <__vectors>

00000130 <initADC>:
}

/* DO NOT USE THIS FUNCTION. Only for reference. */
bool is_ready(void){
	return !(ADCSRA & (1<<ADSC));
}
 130:	11 b8       	out	0x01, r1	; 1
 132:	ec e7       	ldi	r30, 0x7C	; 124
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 ee       	ldi	r24, 0xE0	; 224
 138:	80 83       	st	Z, r24
 13a:	80 81       	ld	r24, Z
 13c:	80 7f       	andi	r24, 0xF0	; 240
 13e:	80 83       	st	Z, r24
 140:	ea e7       	ldi	r30, 0x7A	; 122
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	8e e8       	ldi	r24, 0x8E	; 142
 146:	80 83       	st	Z, r24
 148:	80 81       	ld	r24, Z
 14a:	80 64       	ori	r24, 0x40	; 64
 14c:	80 83       	st	Z, r24
 14e:	08 95       	ret

00000150 <adc_start>:

void adc_start(){
	//ADMUX &= 0xE0;      //Rensa gammalt
	//ADMUX |= port;
	ADCSRA |= (1<<ADSC);
 150:	ea e7       	ldi	r30, 0x7A	; 122
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	80 64       	ori	r24, 0x40	; 64
 158:	80 83       	st	Z, r24
 15a:	08 95       	ret

0000015c <adc_read>:
	return;
}

uint8_t adc_read(void){
	while (!(ADCSRA & (1<<ADIF))); {
 15c:	ea e7       	ldi	r30, 0x7A	; 122
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	84 ff       	sbrs	r24, 4
 164:	fd cf       	rjmp	.-6      	; 0x160 <adc_read+0x4>
		/* wait for conversion to finish */
	}
	return (ADCH);
 166:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 16a:	08 95       	ret

0000016c <readGyro>:

/* Keeps track of the current bearing relative to the start */
static int CURRENT_BEARING;

uint8_t readGyro() {
	ADMUX &= 0xE0; /* Clear the ADMUX to make sure we don't look at the wrong input. */
 16c:	ec e7       	ldi	r30, 0x7C	; 124
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	80 7e       	andi	r24, 0xE0	; 224
 174:	80 83       	st	Z, r24
	ADMUX |= 0b00000011; /* ADC Port 3 */ 
 176:	80 81       	ld	r24, Z
 178:	83 60       	ori	r24, 0x03	; 3
 17a:	80 83       	st	Z, r24
	adc_start(); /* Start a conversion */
 17c:	e9 df       	rcall	.-46     	; 0x150 <adc_start>
	uint8_t data = adc_read();
 17e:	ee cf       	rjmp	.-36     	; 0x15c <adc_read>
 180:	08 95       	ret

00000182 <initGyro>:
	return data;
}
 182:	8f e4       	ldi	r24, 0x4F	; 79
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 184:	93 ec       	ldi	r25, 0xC3	; 195
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <initGyro+0x4>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <initGyro+0xa>
 18c:	00 00       	nop
 18e:	08 95       	ret

00000190 <convertSides>:
uint8_t rightIRdata;
uint8_t leftIRdata;
uint8_t fwdIRdata;

uint8_t convertSides(uint8_t data) {
	uint8_t convertedVal = 42.6*exp((-0.0248*data));
 190:	68 2f       	mov	r22, r24
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	80 e0       	ldi	r24, 0x00	; 0
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	cc d0       	rcall	.+408    	; 0x332 <__floatsisf>
 19a:	2f e5       	ldi	r18, 0x5F	; 95
 19c:	39 e2       	ldi	r19, 0x29	; 41
 19e:	4b ec       	ldi	r20, 0xCB	; 203
 1a0:	5c eb       	ldi	r21, 0xBC	; 188
 1a2:	c9 d1       	rcall	.+914    	; 0x536 <__mulsf3>
 1a4:	6c d0       	rcall	.+216    	; 0x27e <exp>
	return convertedVal;
 1a6:	26 e6       	ldi	r18, 0x66	; 102
 1a8:	36 e6       	ldi	r19, 0x66	; 102
 1aa:	4a e2       	ldi	r20, 0x2A	; 42
 1ac:	52 e4       	ldi	r21, 0x42	; 66
 1ae:	c3 d1       	rcall	.+902    	; 0x536 <__mulsf3>
 1b0:	92 d0       	rcall	.+292    	; 0x2d6 <__fixunssfsi>
 1b2:	86 2f       	mov	r24, r22
}
 1b4:	08 95       	ret

000001b6 <rightDistanceCm>:

/* Functions for reading distance in each direction. Also converts to centimeters. */

/* GP2Y0A41SK. 4-30 CM. Right facing sensor. */
uint8_t rightDistanceCm() {
	ADMUX &= 0xE0; /* Clear the ADMUX to make sure we don't look at the wrong input. */
 1b6:	ec e7       	ldi	r30, 0x7C	; 124
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	80 7e       	andi	r24, 0xE0	; 224
 1be:	80 83       	st	Z, r24
	ADMUX |= 0b00000000; /* Read from ADC Port 0. */
 1c0:	80 81       	ld	r24, Z
 1c2:	80 83       	st	Z, r24
	
	adc_start(); /* Set MUX0 bit to 1 in ADMUX, which tells the ADC to convert data from PORTA 0 (40). */
 1c4:	c5 df       	rcall	.-118    	; 0x150 <adc_start>
	
	rightIRdata = adc_read();
 1c6:	ca df       	rcall	.-108    	; 0x15c <adc_read>
 1c8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <rightIRdata>
	
	uint8_t right_distance_cm = convertSides(rightIRdata);
 1cc:	e1 cf       	rjmp	.-62     	; 0x190 <convertSides>
 1ce:	08 95       	ret

000001d0 <leftDistanceCm>:
	
	return right_distance_cm;
}
 1d0:	ec e7       	ldi	r30, 0x7C	; 124

/* GP2Y0A41SK. 4-30 CM. Right facing sensor. */
uint8_t leftDistanceCm() {
	ADMUX &= 0xE0; /* Clear the ADMUX to make sure we don't look at the wrong input.  */
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	80 7e       	andi	r24, 0xE0	; 224
 1d8:	80 83       	st	Z, r24
	ADMUX |= 0b00000001;
 1da:	80 81       	ld	r24, Z
 1dc:	81 60       	ori	r24, 0x01	; 1
 1de:	80 83       	st	Z, r24
	
	adc_start(); /* Set MUX1 bit to 1. Reads data from PORTA 1 (39)  */
 1e0:	b7 df       	rcall	.-146    	; 0x150 <adc_start>
	
	leftIRdata = adc_read();
 1e2:	bc df       	rcall	.-136    	; 0x15c <adc_read>
 1e4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <leftIRdata>
	
	uint8_t left_distance_cm = convertSides(leftIRdata);
 1e8:	d3 cf       	rjmp	.-90     	; 0x190 <convertSides>
 1ea:	08 95       	ret

000001ec <convertFwd>:
	
	return left_distance_cm;
}
 1ec:	68 2f       	mov	r22, r24

uint8_t convertFwd(uint8_t data) {
	uint8_t convertedVal = 3876*pow(data, -1.27);
 1ee:	70 e0       	ldi	r23, 0x00	; 0
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	9c d0       	rcall	.+312    	; 0x32e <__floatunsisf>
 1f6:	2c e5       	ldi	r18, 0x5C	; 92
 1f8:	3f e8       	ldi	r19, 0x8F	; 143
 1fa:	42 ea       	ldi	r20, 0xA2	; 162
 1fc:	5f eb       	ldi	r21, 0xBF	; 191
 1fe:	fe d1       	rcall	.+1020   	; 0x5fc <pow>
	return convertedVal;
 200:	20 e0       	ldi	r18, 0x00	; 0
 202:	30 e4       	ldi	r19, 0x40	; 64
 204:	42 e7       	ldi	r20, 0x72	; 114
 206:	55 e4       	ldi	r21, 0x45	; 69
 208:	96 d1       	rcall	.+812    	; 0x536 <__mulsf3>
 20a:	65 d0       	rcall	.+202    	; 0x2d6 <__fixunssfsi>
 20c:	86 2f       	mov	r24, r22
}
 20e:	08 95       	ret

00000210 <fwdDistanceCm>:

/* GP2Y0A21. 10-80 CM. Forward facing sensors. */
uint8_t fwdDistanceCm() {
	ADMUX &= 0xE0; /* Clear the ADMUX to make sure we don't look at the wrong input. */
 210:	ec e7       	ldi	r30, 0x7C	; 124
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	80 81       	ld	r24, Z
 216:	80 7e       	andi	r24, 0xE0	; 224
 218:	80 83       	st	Z, r24
	ADMUX |= 0b00000010;
 21a:	80 81       	ld	r24, Z
 21c:	82 60       	ori	r24, 0x02	; 2
 21e:	80 83       	st	Z, r24
	
	adc_start(); /* PORTA 2 (38) */
 220:	97 df       	rcall	.-210    	; 0x150 <adc_start>
	
	fwdIRdata = adc_read();
 222:	9c df       	rcall	.-200    	; 0x15c <adc_read>
 224:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	uint8_t fwd_distance_cm = convertFwd(fwdIRdata);
 228:	e1 cf       	rjmp	.-62     	; 0x1ec <convertFwd>
 22a:	08 95       	ret

0000022c <main>:
	
	return fwd_distance_cm;
}
 22c:	10 d0       	rcall	.+32     	; 0x24e <initSensors>
/* loop for testing */

int main() {
	initSensors();
	
	DDRB |= 0xFF;
 22e:	84 b1       	in	r24, 0x04	; 4
 230:	8f ef       	ldi	r24, 0xFF	; 255
	
	while(1) {
		data_IR_1 = getRightDistance();
 232:	84 b9       	out	0x04, r24	; 4
 234:	13 d0       	rcall	.+38     	; 0x25c <getRightDistance>
 236:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <data_IR_1>
		data_IR_2 = getLeftDistance();
 23a:	14 d0       	rcall	.+40     	; 0x264 <getLeftDistance>
 23c:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <data_IR_2>
		data_IR_3 = getFwdDistance();
 240:	15 d0       	rcall	.+42     	; 0x26c <getFwdDistance>
 242:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <data_IR_3>
		data_gyro = getGyroData();
 246:	06 d0       	rcall	.+12     	; 0x254 <getGyroData>
 248:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <data_gyro>
 24c:	f3 cf       	rjmp	.-26     	; 0x234 <main+0x8>

0000024e <initSensors>:
uint8_t leftDistance;
uint8_t fwdDistance;

void initSensors() {
	/* Initialize Gyroscope*/
	initGyro();
 24e:	99 df       	rcall	.-206    	; 0x182 <initGyro>

	/* Initialize IR-Sensors (distance) */
	// initDistance();

	/* Initialize the AD Converter */
	initADC();
 250:	6f cf       	rjmp	.-290    	; 0x130 <initADC>
 252:	08 95       	ret

00000254 <getGyroData>:
 254:	8b df       	rcall	.-234    	; 0x16c <readGyro>

}

/* Gets the gyro-data from the ADC */
uint8_t getGyroData() {
	gyroData = readGyro();
 256:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <gyroData>
	return gyroData;
}
 25a:	08 95       	ret

0000025c <getRightDistance>:

/* Gets side + forward facing sensor-data from ADC. */
uint8_t getRightDistance() {
	rightDistance = rightDistanceCm();
 25c:	ac df       	rcall	.-168    	; 0x1b6 <rightDistanceCm>
 25e:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <rightDistance>
	return rightDistance;
}
 262:	08 95       	ret

00000264 <getLeftDistance>:

uint8_t getLeftDistance() {
	leftDistance = leftDistanceCm();
 264:	b5 df       	rcall	.-150    	; 0x1d0 <leftDistanceCm>
 266:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <leftDistance>
	return leftDistance;
	
}
 26a:	08 95       	ret

0000026c <getFwdDistance>:

uint8_t getFwdDistance() {
	fwdDistance = fwdDistanceCm();
 26c:	d1 df       	rcall	.-94     	; 0x210 <fwdDistanceCm>
 26e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <fwdDistance>
	return fwdDistance;
 272:	08 95       	ret
 274:	19 f4       	brne	.+6      	; 0x27c <getFwdDistance+0x10>
 276:	0e f0       	brts	.+2      	; 0x27a <getFwdDistance+0xe>
 278:	97 c0       	rjmp	.+302    	; 0x3a8 <__fp_inf>
 27a:	e6 c0       	rjmp	.+460    	; 0x448 <__fp_zero>
 27c:	9b c0       	rjmp	.+310    	; 0x3b4 <__fp_nan>

0000027e <exp>:
 27e:	ca d0       	rcall	.+404    	; 0x414 <__fp_splitA>
 280:	c8 f3       	brcs	.-14     	; 0x274 <getFwdDistance+0x8>
 282:	96 38       	cpi	r25, 0x86	; 134
 284:	c0 f7       	brcc	.-16     	; 0x276 <getFwdDistance+0xa>
 286:	07 f8       	bld	r0, 7
 288:	0f 92       	push	r0
 28a:	e8 94       	clt
 28c:	2b e3       	ldi	r18, 0x3B	; 59
 28e:	3a ea       	ldi	r19, 0xAA	; 170
 290:	48 eb       	ldi	r20, 0xB8	; 184
 292:	5f e7       	ldi	r21, 0x7F	; 127
 294:	5e d1       	rcall	.+700    	; 0x552 <__mulsf3_pse>
 296:	0f 92       	push	r0
 298:	0f 92       	push	r0
 29a:	0f 92       	push	r0
 29c:	4d b7       	in	r20, 0x3d	; 61
 29e:	5e b7       	in	r21, 0x3e	; 62
 2a0:	0f 92       	push	r0
 2a2:	16 d1       	rcall	.+556    	; 0x4d0 <modf>
 2a4:	ec e8       	ldi	r30, 0x8C	; 140
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	88 d0       	rcall	.+272    	; 0x3ba <__fp_powser>
 2aa:	4f 91       	pop	r20
 2ac:	5f 91       	pop	r21
 2ae:	ef 91       	pop	r30
 2b0:	ff 91       	pop	r31
 2b2:	e5 95       	asr	r30
 2b4:	ee 1f       	adc	r30, r30
 2b6:	ff 1f       	adc	r31, r31
 2b8:	49 f0       	breq	.+18     	; 0x2cc <exp+0x4e>
 2ba:	fe 57       	subi	r31, 0x7E	; 126
 2bc:	e0 68       	ori	r30, 0x80	; 128
 2be:	44 27       	eor	r20, r20
 2c0:	ee 0f       	add	r30, r30
 2c2:	44 1f       	adc	r20, r20
 2c4:	fa 95       	dec	r31
 2c6:	e1 f7       	brne	.-8      	; 0x2c0 <exp+0x42>
 2c8:	41 95       	neg	r20
 2ca:	55 0b       	sbc	r21, r21
 2cc:	cd d0       	rcall	.+410    	; 0x468 <ldexp>
 2ce:	0f 90       	pop	r0
 2d0:	07 fe       	sbrs	r0, 7
 2d2:	c1 c0       	rjmp	.+386    	; 0x456 <inverse>
 2d4:	08 95       	ret

000002d6 <__fixunssfsi>:
 2d6:	9e d0       	rcall	.+316    	; 0x414 <__fp_splitA>
 2d8:	88 f0       	brcs	.+34     	; 0x2fc <__fixunssfsi+0x26>
 2da:	9f 57       	subi	r25, 0x7F	; 127
 2dc:	90 f0       	brcs	.+36     	; 0x302 <__fixunssfsi+0x2c>
 2de:	b9 2f       	mov	r27, r25
 2e0:	99 27       	eor	r25, r25
 2e2:	b7 51       	subi	r27, 0x17	; 23
 2e4:	a0 f0       	brcs	.+40     	; 0x30e <__fixunssfsi+0x38>
 2e6:	d1 f0       	breq	.+52     	; 0x31c <__fixunssfsi+0x46>
 2e8:	66 0f       	add	r22, r22
 2ea:	77 1f       	adc	r23, r23
 2ec:	88 1f       	adc	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	1a f0       	brmi	.+6      	; 0x2f8 <__fixunssfsi+0x22>
 2f2:	ba 95       	dec	r27
 2f4:	c9 f7       	brne	.-14     	; 0x2e8 <__fixunssfsi+0x12>
 2f6:	12 c0       	rjmp	.+36     	; 0x31c <__fixunssfsi+0x46>
 2f8:	b1 30       	cpi	r27, 0x01	; 1
 2fa:	81 f0       	breq	.+32     	; 0x31c <__fixunssfsi+0x46>
 2fc:	a5 d0       	rcall	.+330    	; 0x448 <__fp_zero>
 2fe:	b1 e0       	ldi	r27, 0x01	; 1
 300:	08 95       	ret
 302:	a2 c0       	rjmp	.+324    	; 0x448 <__fp_zero>
 304:	67 2f       	mov	r22, r23
 306:	78 2f       	mov	r23, r24
 308:	88 27       	eor	r24, r24
 30a:	b8 5f       	subi	r27, 0xF8	; 248
 30c:	39 f0       	breq	.+14     	; 0x31c <__fixunssfsi+0x46>
 30e:	b9 3f       	cpi	r27, 0xF9	; 249
 310:	cc f3       	brlt	.-14     	; 0x304 <__fixunssfsi+0x2e>
 312:	86 95       	lsr	r24
 314:	77 95       	ror	r23
 316:	67 95       	ror	r22
 318:	b3 95       	inc	r27
 31a:	d9 f7       	brne	.-10     	; 0x312 <__fixunssfsi+0x3c>
 31c:	3e f4       	brtc	.+14     	; 0x32c <__fixunssfsi+0x56>
 31e:	90 95       	com	r25
 320:	80 95       	com	r24
 322:	70 95       	com	r23
 324:	61 95       	neg	r22
 326:	7f 4f       	sbci	r23, 0xFF	; 255
 328:	8f 4f       	sbci	r24, 0xFF	; 255
 32a:	9f 4f       	sbci	r25, 0xFF	; 255
 32c:	08 95       	ret

0000032e <__floatunsisf>:
 32e:	e8 94       	clt
 330:	09 c0       	rjmp	.+18     	; 0x344 <__floatsisf+0x12>

00000332 <__floatsisf>:
 332:	97 fb       	bst	r25, 7
 334:	3e f4       	brtc	.+14     	; 0x344 <__floatsisf+0x12>
 336:	90 95       	com	r25
 338:	80 95       	com	r24
 33a:	70 95       	com	r23
 33c:	61 95       	neg	r22
 33e:	7f 4f       	sbci	r23, 0xFF	; 255
 340:	8f 4f       	sbci	r24, 0xFF	; 255
 342:	9f 4f       	sbci	r25, 0xFF	; 255
 344:	99 23       	and	r25, r25
 346:	a9 f0       	breq	.+42     	; 0x372 <__floatsisf+0x40>
 348:	f9 2f       	mov	r31, r25
 34a:	96 e9       	ldi	r25, 0x96	; 150
 34c:	bb 27       	eor	r27, r27
 34e:	93 95       	inc	r25
 350:	f6 95       	lsr	r31
 352:	87 95       	ror	r24
 354:	77 95       	ror	r23
 356:	67 95       	ror	r22
 358:	b7 95       	ror	r27
 35a:	f1 11       	cpse	r31, r1
 35c:	f8 cf       	rjmp	.-16     	; 0x34e <__floatsisf+0x1c>
 35e:	fa f4       	brpl	.+62     	; 0x39e <__floatsisf+0x6c>
 360:	bb 0f       	add	r27, r27
 362:	11 f4       	brne	.+4      	; 0x368 <__floatsisf+0x36>
 364:	60 ff       	sbrs	r22, 0
 366:	1b c0       	rjmp	.+54     	; 0x39e <__floatsisf+0x6c>
 368:	6f 5f       	subi	r22, 0xFF	; 255
 36a:	7f 4f       	sbci	r23, 0xFF	; 255
 36c:	8f 4f       	sbci	r24, 0xFF	; 255
 36e:	9f 4f       	sbci	r25, 0xFF	; 255
 370:	16 c0       	rjmp	.+44     	; 0x39e <__floatsisf+0x6c>
 372:	88 23       	and	r24, r24
 374:	11 f0       	breq	.+4      	; 0x37a <__floatsisf+0x48>
 376:	96 e9       	ldi	r25, 0x96	; 150
 378:	11 c0       	rjmp	.+34     	; 0x39c <__floatsisf+0x6a>
 37a:	77 23       	and	r23, r23
 37c:	21 f0       	breq	.+8      	; 0x386 <__floatsisf+0x54>
 37e:	9e e8       	ldi	r25, 0x8E	; 142
 380:	87 2f       	mov	r24, r23
 382:	76 2f       	mov	r23, r22
 384:	05 c0       	rjmp	.+10     	; 0x390 <__floatsisf+0x5e>
 386:	66 23       	and	r22, r22
 388:	71 f0       	breq	.+28     	; 0x3a6 <__floatsisf+0x74>
 38a:	96 e8       	ldi	r25, 0x86	; 134
 38c:	86 2f       	mov	r24, r22
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	60 e0       	ldi	r22, 0x00	; 0
 392:	2a f0       	brmi	.+10     	; 0x39e <__floatsisf+0x6c>
 394:	9a 95       	dec	r25
 396:	66 0f       	add	r22, r22
 398:	77 1f       	adc	r23, r23
 39a:	88 1f       	adc	r24, r24
 39c:	da f7       	brpl	.-10     	; 0x394 <__floatsisf+0x62>
 39e:	88 0f       	add	r24, r24
 3a0:	96 95       	lsr	r25
 3a2:	87 95       	ror	r24
 3a4:	97 f9       	bld	r25, 7
 3a6:	08 95       	ret

000003a8 <__fp_inf>:
 3a8:	97 f9       	bld	r25, 7
 3aa:	9f 67       	ori	r25, 0x7F	; 127
 3ac:	80 e8       	ldi	r24, 0x80	; 128
 3ae:	70 e0       	ldi	r23, 0x00	; 0
 3b0:	60 e0       	ldi	r22, 0x00	; 0
 3b2:	08 95       	ret

000003b4 <__fp_nan>:
 3b4:	9f ef       	ldi	r25, 0xFF	; 255
 3b6:	80 ec       	ldi	r24, 0xC0	; 192
 3b8:	08 95       	ret

000003ba <__fp_powser>:
 3ba:	df 93       	push	r29
 3bc:	cf 93       	push	r28
 3be:	1f 93       	push	r17
 3c0:	0f 93       	push	r16
 3c2:	ff 92       	push	r15
 3c4:	ef 92       	push	r14
 3c6:	df 92       	push	r13
 3c8:	7b 01       	movw	r14, r22
 3ca:	8c 01       	movw	r16, r24
 3cc:	68 94       	set
 3ce:	05 c0       	rjmp	.+10     	; 0x3da <__fp_powser+0x20>
 3d0:	da 2e       	mov	r13, r26
 3d2:	ef 01       	movw	r28, r30
 3d4:	bc d0       	rcall	.+376    	; 0x54e <__mulsf3x>
 3d6:	fe 01       	movw	r30, r28
 3d8:	e8 94       	clt
 3da:	a5 91       	lpm	r26, Z+
 3dc:	25 91       	lpm	r18, Z+
 3de:	35 91       	lpm	r19, Z+
 3e0:	45 91       	lpm	r20, Z+
 3e2:	55 91       	lpm	r21, Z+
 3e4:	ae f3       	brts	.-22     	; 0x3d0 <__fp_powser+0x16>
 3e6:	ef 01       	movw	r28, r30
 3e8:	67 d1       	rcall	.+718    	; 0x6b8 <__addsf3x>
 3ea:	fe 01       	movw	r30, r28
 3ec:	97 01       	movw	r18, r14
 3ee:	a8 01       	movw	r20, r16
 3f0:	da 94       	dec	r13
 3f2:	79 f7       	brne	.-34     	; 0x3d2 <__fp_powser+0x18>
 3f4:	df 90       	pop	r13
 3f6:	ef 90       	pop	r14
 3f8:	ff 90       	pop	r15
 3fa:	0f 91       	pop	r16
 3fc:	1f 91       	pop	r17
 3fe:	cf 91       	pop	r28
 400:	df 91       	pop	r29
 402:	08 95       	ret

00000404 <__fp_split3>:
 404:	57 fd       	sbrc	r21, 7
 406:	90 58       	subi	r25, 0x80	; 128
 408:	44 0f       	add	r20, r20
 40a:	55 1f       	adc	r21, r21
 40c:	59 f0       	breq	.+22     	; 0x424 <__fp_splitA+0x10>
 40e:	5f 3f       	cpi	r21, 0xFF	; 255
 410:	71 f0       	breq	.+28     	; 0x42e <__fp_splitA+0x1a>
 412:	47 95       	ror	r20

00000414 <__fp_splitA>:
 414:	88 0f       	add	r24, r24
 416:	97 fb       	bst	r25, 7
 418:	99 1f       	adc	r25, r25
 41a:	61 f0       	breq	.+24     	; 0x434 <__fp_splitA+0x20>
 41c:	9f 3f       	cpi	r25, 0xFF	; 255
 41e:	79 f0       	breq	.+30     	; 0x43e <__fp_splitA+0x2a>
 420:	87 95       	ror	r24
 422:	08 95       	ret
 424:	12 16       	cp	r1, r18
 426:	13 06       	cpc	r1, r19
 428:	14 06       	cpc	r1, r20
 42a:	55 1f       	adc	r21, r21
 42c:	f2 cf       	rjmp	.-28     	; 0x412 <__fp_split3+0xe>
 42e:	46 95       	lsr	r20
 430:	f1 df       	rcall	.-30     	; 0x414 <__fp_splitA>
 432:	08 c0       	rjmp	.+16     	; 0x444 <__fp_splitA+0x30>
 434:	16 16       	cp	r1, r22
 436:	17 06       	cpc	r1, r23
 438:	18 06       	cpc	r1, r24
 43a:	99 1f       	adc	r25, r25
 43c:	f1 cf       	rjmp	.-30     	; 0x420 <__fp_splitA+0xc>
 43e:	86 95       	lsr	r24
 440:	71 05       	cpc	r23, r1
 442:	61 05       	cpc	r22, r1
 444:	08 94       	sec
 446:	08 95       	ret

00000448 <__fp_zero>:
 448:	e8 94       	clt

0000044a <__fp_szero>:
 44a:	bb 27       	eor	r27, r27
 44c:	66 27       	eor	r22, r22
 44e:	77 27       	eor	r23, r23
 450:	cb 01       	movw	r24, r22
 452:	97 f9       	bld	r25, 7
 454:	08 95       	ret

00000456 <inverse>:
 456:	9b 01       	movw	r18, r22
 458:	ac 01       	movw	r20, r24
 45a:	60 e0       	ldi	r22, 0x00	; 0
 45c:	70 e0       	ldi	r23, 0x00	; 0
 45e:	80 e8       	ldi	r24, 0x80	; 128
 460:	9f e3       	ldi	r25, 0x3F	; 63
 462:	7d c1       	rjmp	.+762    	; 0x75e <__divsf3>
 464:	a1 cf       	rjmp	.-190    	; 0x3a8 <__fp_inf>
 466:	e3 c1       	rjmp	.+966    	; 0x82e <__fp_mpack>

00000468 <ldexp>:
 468:	d5 df       	rcall	.-86     	; 0x414 <__fp_splitA>
 46a:	e8 f3       	brcs	.-6      	; 0x466 <inverse+0x10>
 46c:	99 23       	and	r25, r25
 46e:	d9 f3       	breq	.-10     	; 0x466 <inverse+0x10>
 470:	94 0f       	add	r25, r20
 472:	51 1d       	adc	r21, r1
 474:	bb f3       	brvs	.-18     	; 0x464 <inverse+0xe>
 476:	91 50       	subi	r25, 0x01	; 1
 478:	50 40       	sbci	r21, 0x00	; 0
 47a:	94 f0       	brlt	.+36     	; 0x4a0 <ldexp+0x38>
 47c:	59 f0       	breq	.+22     	; 0x494 <ldexp+0x2c>
 47e:	88 23       	and	r24, r24
 480:	32 f0       	brmi	.+12     	; 0x48e <ldexp+0x26>
 482:	66 0f       	add	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	88 1f       	adc	r24, r24
 488:	91 50       	subi	r25, 0x01	; 1
 48a:	50 40       	sbci	r21, 0x00	; 0
 48c:	c1 f7       	brne	.-16     	; 0x47e <ldexp+0x16>
 48e:	9e 3f       	cpi	r25, 0xFE	; 254
 490:	51 05       	cpc	r21, r1
 492:	44 f7       	brge	.-48     	; 0x464 <inverse+0xe>
 494:	88 0f       	add	r24, r24
 496:	91 1d       	adc	r25, r1
 498:	96 95       	lsr	r25
 49a:	87 95       	ror	r24
 49c:	97 f9       	bld	r25, 7
 49e:	08 95       	ret
 4a0:	5f 3f       	cpi	r21, 0xFF	; 255
 4a2:	ac f0       	brlt	.+42     	; 0x4ce <ldexp+0x66>
 4a4:	98 3e       	cpi	r25, 0xE8	; 232
 4a6:	9c f0       	brlt	.+38     	; 0x4ce <ldexp+0x66>
 4a8:	bb 27       	eor	r27, r27
 4aa:	86 95       	lsr	r24
 4ac:	77 95       	ror	r23
 4ae:	67 95       	ror	r22
 4b0:	b7 95       	ror	r27
 4b2:	08 f4       	brcc	.+2      	; 0x4b6 <ldexp+0x4e>
 4b4:	b1 60       	ori	r27, 0x01	; 1
 4b6:	93 95       	inc	r25
 4b8:	c1 f7       	brne	.-16     	; 0x4aa <ldexp+0x42>
 4ba:	bb 0f       	add	r27, r27
 4bc:	58 f7       	brcc	.-42     	; 0x494 <ldexp+0x2c>
 4be:	11 f4       	brne	.+4      	; 0x4c4 <ldexp+0x5c>
 4c0:	60 ff       	sbrs	r22, 0
 4c2:	e8 cf       	rjmp	.-48     	; 0x494 <ldexp+0x2c>
 4c4:	6f 5f       	subi	r22, 0xFF	; 255
 4c6:	7f 4f       	sbci	r23, 0xFF	; 255
 4c8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ca:	9f 4f       	sbci	r25, 0xFF	; 255
 4cc:	e3 cf       	rjmp	.-58     	; 0x494 <ldexp+0x2c>
 4ce:	bd cf       	rjmp	.-134    	; 0x44a <__fp_szero>

000004d0 <modf>:
 4d0:	fa 01       	movw	r30, r20
 4d2:	dc 01       	movw	r26, r24
 4d4:	aa 0f       	add	r26, r26
 4d6:	bb 1f       	adc	r27, r27
 4d8:	9b 01       	movw	r18, r22
 4da:	ac 01       	movw	r20, r24
 4dc:	bf 57       	subi	r27, 0x7F	; 127
 4de:	28 f4       	brcc	.+10     	; 0x4ea <modf+0x1a>
 4e0:	22 27       	eor	r18, r18
 4e2:	33 27       	eor	r19, r19
 4e4:	44 27       	eor	r20, r20
 4e6:	50 78       	andi	r21, 0x80	; 128
 4e8:	1f c0       	rjmp	.+62     	; 0x528 <modf+0x58>
 4ea:	b7 51       	subi	r27, 0x17	; 23
 4ec:	88 f4       	brcc	.+34     	; 0x510 <modf+0x40>
 4ee:	ab 2f       	mov	r26, r27
 4f0:	00 24       	eor	r0, r0
 4f2:	46 95       	lsr	r20
 4f4:	37 95       	ror	r19
 4f6:	27 95       	ror	r18
 4f8:	01 1c       	adc	r0, r1
 4fa:	a3 95       	inc	r26
 4fc:	d2 f3       	brmi	.-12     	; 0x4f2 <modf+0x22>
 4fe:	00 20       	and	r0, r0
 500:	69 f0       	breq	.+26     	; 0x51c <modf+0x4c>
 502:	22 0f       	add	r18, r18
 504:	33 1f       	adc	r19, r19
 506:	44 1f       	adc	r20, r20
 508:	b3 95       	inc	r27
 50a:	da f3       	brmi	.-10     	; 0x502 <modf+0x32>
 50c:	0d d0       	rcall	.+26     	; 0x528 <modf+0x58>
 50e:	c2 c0       	rjmp	.+388    	; 0x694 <__subsf3>
 510:	61 30       	cpi	r22, 0x01	; 1
 512:	71 05       	cpc	r23, r1
 514:	a0 e8       	ldi	r26, 0x80	; 128
 516:	8a 07       	cpc	r24, r26
 518:	b9 46       	sbci	r27, 0x69	; 105
 51a:	30 f4       	brcc	.+12     	; 0x528 <modf+0x58>
 51c:	9b 01       	movw	r18, r22
 51e:	ac 01       	movw	r20, r24
 520:	66 27       	eor	r22, r22
 522:	77 27       	eor	r23, r23
 524:	88 27       	eor	r24, r24
 526:	90 78       	andi	r25, 0x80	; 128
 528:	30 96       	adiw	r30, 0x00	; 0
 52a:	21 f0       	breq	.+8      	; 0x534 <modf+0x64>
 52c:	20 83       	st	Z, r18
 52e:	31 83       	std	Z+1, r19	; 0x01
 530:	42 83       	std	Z+2, r20	; 0x02
 532:	53 83       	std	Z+3, r21	; 0x03
 534:	08 95       	ret

00000536 <__mulsf3>:
 536:	0b d0       	rcall	.+22     	; 0x54e <__mulsf3x>
 538:	96 c1       	rjmp	.+812    	; 0x866 <__fp_round>
 53a:	87 d1       	rcall	.+782    	; 0x84a <__fp_pscA>
 53c:	28 f0       	brcs	.+10     	; 0x548 <__mulsf3+0x12>
 53e:	8c d1       	rcall	.+792    	; 0x858 <__fp_pscB>
 540:	18 f0       	brcs	.+6      	; 0x548 <__mulsf3+0x12>
 542:	95 23       	and	r25, r21
 544:	09 f0       	breq	.+2      	; 0x548 <__mulsf3+0x12>
 546:	30 cf       	rjmp	.-416    	; 0x3a8 <__fp_inf>
 548:	35 cf       	rjmp	.-406    	; 0x3b4 <__fp_nan>
 54a:	11 24       	eor	r1, r1
 54c:	7e cf       	rjmp	.-260    	; 0x44a <__fp_szero>

0000054e <__mulsf3x>:
 54e:	5a df       	rcall	.-332    	; 0x404 <__fp_split3>
 550:	a0 f3       	brcs	.-24     	; 0x53a <__mulsf3+0x4>

00000552 <__mulsf3_pse>:
 552:	95 9f       	mul	r25, r21
 554:	d1 f3       	breq	.-12     	; 0x54a <__mulsf3+0x14>
 556:	95 0f       	add	r25, r21
 558:	50 e0       	ldi	r21, 0x00	; 0
 55a:	55 1f       	adc	r21, r21
 55c:	62 9f       	mul	r22, r18
 55e:	f0 01       	movw	r30, r0
 560:	72 9f       	mul	r23, r18
 562:	bb 27       	eor	r27, r27
 564:	f0 0d       	add	r31, r0
 566:	b1 1d       	adc	r27, r1
 568:	63 9f       	mul	r22, r19
 56a:	aa 27       	eor	r26, r26
 56c:	f0 0d       	add	r31, r0
 56e:	b1 1d       	adc	r27, r1
 570:	aa 1f       	adc	r26, r26
 572:	64 9f       	mul	r22, r20
 574:	66 27       	eor	r22, r22
 576:	b0 0d       	add	r27, r0
 578:	a1 1d       	adc	r26, r1
 57a:	66 1f       	adc	r22, r22
 57c:	82 9f       	mul	r24, r18
 57e:	22 27       	eor	r18, r18
 580:	b0 0d       	add	r27, r0
 582:	a1 1d       	adc	r26, r1
 584:	62 1f       	adc	r22, r18
 586:	73 9f       	mul	r23, r19
 588:	b0 0d       	add	r27, r0
 58a:	a1 1d       	adc	r26, r1
 58c:	62 1f       	adc	r22, r18
 58e:	83 9f       	mul	r24, r19
 590:	a0 0d       	add	r26, r0
 592:	61 1d       	adc	r22, r1
 594:	22 1f       	adc	r18, r18
 596:	74 9f       	mul	r23, r20
 598:	33 27       	eor	r19, r19
 59a:	a0 0d       	add	r26, r0
 59c:	61 1d       	adc	r22, r1
 59e:	23 1f       	adc	r18, r19
 5a0:	84 9f       	mul	r24, r20
 5a2:	60 0d       	add	r22, r0
 5a4:	21 1d       	adc	r18, r1
 5a6:	82 2f       	mov	r24, r18
 5a8:	76 2f       	mov	r23, r22
 5aa:	6a 2f       	mov	r22, r26
 5ac:	11 24       	eor	r1, r1
 5ae:	9f 57       	subi	r25, 0x7F	; 127
 5b0:	50 40       	sbci	r21, 0x00	; 0
 5b2:	8a f0       	brmi	.+34     	; 0x5d6 <__mulsf3_pse+0x84>
 5b4:	e1 f0       	breq	.+56     	; 0x5ee <__mulsf3_pse+0x9c>
 5b6:	88 23       	and	r24, r24
 5b8:	4a f0       	brmi	.+18     	; 0x5cc <__mulsf3_pse+0x7a>
 5ba:	ee 0f       	add	r30, r30
 5bc:	ff 1f       	adc	r31, r31
 5be:	bb 1f       	adc	r27, r27
 5c0:	66 1f       	adc	r22, r22
 5c2:	77 1f       	adc	r23, r23
 5c4:	88 1f       	adc	r24, r24
 5c6:	91 50       	subi	r25, 0x01	; 1
 5c8:	50 40       	sbci	r21, 0x00	; 0
 5ca:	a9 f7       	brne	.-22     	; 0x5b6 <__mulsf3_pse+0x64>
 5cc:	9e 3f       	cpi	r25, 0xFE	; 254
 5ce:	51 05       	cpc	r21, r1
 5d0:	70 f0       	brcs	.+28     	; 0x5ee <__mulsf3_pse+0x9c>
 5d2:	ea ce       	rjmp	.-556    	; 0x3a8 <__fp_inf>
 5d4:	3a cf       	rjmp	.-396    	; 0x44a <__fp_szero>
 5d6:	5f 3f       	cpi	r21, 0xFF	; 255
 5d8:	ec f3       	brlt	.-6      	; 0x5d4 <__mulsf3_pse+0x82>
 5da:	98 3e       	cpi	r25, 0xE8	; 232
 5dc:	dc f3       	brlt	.-10     	; 0x5d4 <__mulsf3_pse+0x82>
 5de:	86 95       	lsr	r24
 5e0:	77 95       	ror	r23
 5e2:	67 95       	ror	r22
 5e4:	b7 95       	ror	r27
 5e6:	f7 95       	ror	r31
 5e8:	e7 95       	ror	r30
 5ea:	9f 5f       	subi	r25, 0xFF	; 255
 5ec:	c1 f7       	brne	.-16     	; 0x5de <__mulsf3_pse+0x8c>
 5ee:	fe 2b       	or	r31, r30
 5f0:	88 0f       	add	r24, r24
 5f2:	91 1d       	adc	r25, r1
 5f4:	96 95       	lsr	r25
 5f6:	87 95       	ror	r24
 5f8:	97 f9       	bld	r25, 7
 5fa:	08 95       	ret

000005fc <pow>:
 5fc:	fa 01       	movw	r30, r20
 5fe:	ee 0f       	add	r30, r30
 600:	ff 1f       	adc	r31, r31
 602:	30 96       	adiw	r30, 0x00	; 0
 604:	21 05       	cpc	r18, r1
 606:	31 05       	cpc	r19, r1
 608:	99 f1       	breq	.+102    	; 0x670 <pow+0x74>
 60a:	61 15       	cp	r22, r1
 60c:	71 05       	cpc	r23, r1
 60e:	61 f4       	brne	.+24     	; 0x628 <pow+0x2c>
 610:	80 38       	cpi	r24, 0x80	; 128
 612:	bf e3       	ldi	r27, 0x3F	; 63
 614:	9b 07       	cpc	r25, r27
 616:	49 f1       	breq	.+82     	; 0x66a <pow+0x6e>
 618:	68 94       	set
 61a:	90 38       	cpi	r25, 0x80	; 128
 61c:	81 05       	cpc	r24, r1
 61e:	61 f0       	breq	.+24     	; 0x638 <pow+0x3c>
 620:	80 38       	cpi	r24, 0x80	; 128
 622:	bf ef       	ldi	r27, 0xFF	; 255
 624:	9b 07       	cpc	r25, r27
 626:	41 f0       	breq	.+16     	; 0x638 <pow+0x3c>
 628:	99 23       	and	r25, r25
 62a:	42 f5       	brpl	.+80     	; 0x67c <pow+0x80>
 62c:	ff 3f       	cpi	r31, 0xFF	; 255
 62e:	e1 05       	cpc	r30, r1
 630:	31 05       	cpc	r19, r1
 632:	21 05       	cpc	r18, r1
 634:	11 f1       	breq	.+68     	; 0x67a <pow+0x7e>
 636:	e8 94       	clt
 638:	08 94       	sec
 63a:	e7 95       	ror	r30
 63c:	d9 01       	movw	r26, r18
 63e:	aa 23       	and	r26, r26
 640:	29 f4       	brne	.+10     	; 0x64c <pow+0x50>
 642:	ab 2f       	mov	r26, r27
 644:	be 2f       	mov	r27, r30
 646:	f8 5f       	subi	r31, 0xF8	; 248
 648:	d0 f3       	brcs	.-12     	; 0x63e <pow+0x42>
 64a:	10 c0       	rjmp	.+32     	; 0x66c <pow+0x70>
 64c:	ff 5f       	subi	r31, 0xFF	; 255
 64e:	70 f4       	brcc	.+28     	; 0x66c <pow+0x70>
 650:	a6 95       	lsr	r26
 652:	e0 f7       	brcc	.-8      	; 0x64c <pow+0x50>
 654:	f7 39       	cpi	r31, 0x97	; 151
 656:	50 f0       	brcs	.+20     	; 0x66c <pow+0x70>
 658:	19 f0       	breq	.+6      	; 0x660 <pow+0x64>
 65a:	ff 3a       	cpi	r31, 0xAF	; 175
 65c:	38 f4       	brcc	.+14     	; 0x66c <pow+0x70>
 65e:	9f 77       	andi	r25, 0x7F	; 127
 660:	9f 93       	push	r25
 662:	0c d0       	rcall	.+24     	; 0x67c <pow+0x80>
 664:	0f 90       	pop	r0
 666:	07 fc       	sbrc	r0, 7
 668:	90 58       	subi	r25, 0x80	; 128
 66a:	08 95       	ret
 66c:	3e f0       	brts	.+14     	; 0x67c <pow+0x80>
 66e:	a2 ce       	rjmp	.-700    	; 0x3b4 <__fp_nan>
 670:	60 e0       	ldi	r22, 0x00	; 0
 672:	70 e0       	ldi	r23, 0x00	; 0
 674:	80 e8       	ldi	r24, 0x80	; 128
 676:	9f e3       	ldi	r25, 0x3F	; 63
 678:	08 95       	ret
 67a:	4f e7       	ldi	r20, 0x7F	; 127
 67c:	9f 77       	andi	r25, 0x7F	; 127
 67e:	5f 93       	push	r21
 680:	4f 93       	push	r20
 682:	3f 93       	push	r19
 684:	2f 93       	push	r18
 686:	05 d1       	rcall	.+522    	; 0x892 <log>
 688:	2f 91       	pop	r18
 68a:	3f 91       	pop	r19
 68c:	4f 91       	pop	r20
 68e:	5f 91       	pop	r21
 690:	52 df       	rcall	.-348    	; 0x536 <__mulsf3>
 692:	f5 cd       	rjmp	.-1046   	; 0x27e <exp>

00000694 <__subsf3>:
 694:	50 58       	subi	r21, 0x80	; 128

00000696 <__addsf3>:
 696:	bb 27       	eor	r27, r27
 698:	aa 27       	eor	r26, r26
 69a:	0e d0       	rcall	.+28     	; 0x6b8 <__addsf3x>
 69c:	e4 c0       	rjmp	.+456    	; 0x866 <__fp_round>
 69e:	d5 d0       	rcall	.+426    	; 0x84a <__fp_pscA>
 6a0:	30 f0       	brcs	.+12     	; 0x6ae <__addsf3+0x18>
 6a2:	da d0       	rcall	.+436    	; 0x858 <__fp_pscB>
 6a4:	20 f0       	brcs	.+8      	; 0x6ae <__addsf3+0x18>
 6a6:	31 f4       	brne	.+12     	; 0x6b4 <__addsf3+0x1e>
 6a8:	9f 3f       	cpi	r25, 0xFF	; 255
 6aa:	11 f4       	brne	.+4      	; 0x6b0 <__addsf3+0x1a>
 6ac:	1e f4       	brtc	.+6      	; 0x6b4 <__addsf3+0x1e>
 6ae:	82 ce       	rjmp	.-764    	; 0x3b4 <__fp_nan>
 6b0:	0e f4       	brtc	.+2      	; 0x6b4 <__addsf3+0x1e>
 6b2:	e0 95       	com	r30
 6b4:	e7 fb       	bst	r30, 7
 6b6:	78 ce       	rjmp	.-784    	; 0x3a8 <__fp_inf>

000006b8 <__addsf3x>:
 6b8:	e9 2f       	mov	r30, r25
 6ba:	a4 de       	rcall	.-696    	; 0x404 <__fp_split3>
 6bc:	80 f3       	brcs	.-32     	; 0x69e <__addsf3+0x8>
 6be:	ba 17       	cp	r27, r26
 6c0:	62 07       	cpc	r22, r18
 6c2:	73 07       	cpc	r23, r19
 6c4:	84 07       	cpc	r24, r20
 6c6:	95 07       	cpc	r25, r21
 6c8:	18 f0       	brcs	.+6      	; 0x6d0 <__addsf3x+0x18>
 6ca:	71 f4       	brne	.+28     	; 0x6e8 <__addsf3x+0x30>
 6cc:	9e f5       	brtc	.+102    	; 0x734 <__addsf3x+0x7c>
 6ce:	bc ce       	rjmp	.-648    	; 0x448 <__fp_zero>
 6d0:	0e f4       	brtc	.+2      	; 0x6d4 <__addsf3x+0x1c>
 6d2:	e0 95       	com	r30
 6d4:	0b 2e       	mov	r0, r27
 6d6:	ba 2f       	mov	r27, r26
 6d8:	a0 2d       	mov	r26, r0
 6da:	0b 01       	movw	r0, r22
 6dc:	b9 01       	movw	r22, r18
 6de:	90 01       	movw	r18, r0
 6e0:	0c 01       	movw	r0, r24
 6e2:	ca 01       	movw	r24, r20
 6e4:	a0 01       	movw	r20, r0
 6e6:	11 24       	eor	r1, r1
 6e8:	ff 27       	eor	r31, r31
 6ea:	59 1b       	sub	r21, r25
 6ec:	99 f0       	breq	.+38     	; 0x714 <__addsf3x+0x5c>
 6ee:	59 3f       	cpi	r21, 0xF9	; 249
 6f0:	50 f4       	brcc	.+20     	; 0x706 <__addsf3x+0x4e>
 6f2:	50 3e       	cpi	r21, 0xE0	; 224
 6f4:	68 f1       	brcs	.+90     	; 0x750 <__addsf3x+0x98>
 6f6:	1a 16       	cp	r1, r26
 6f8:	f0 40       	sbci	r31, 0x00	; 0
 6fa:	a2 2f       	mov	r26, r18
 6fc:	23 2f       	mov	r18, r19
 6fe:	34 2f       	mov	r19, r20
 700:	44 27       	eor	r20, r20
 702:	58 5f       	subi	r21, 0xF8	; 248
 704:	f3 cf       	rjmp	.-26     	; 0x6ec <__addsf3x+0x34>
 706:	46 95       	lsr	r20
 708:	37 95       	ror	r19
 70a:	27 95       	ror	r18
 70c:	a7 95       	ror	r26
 70e:	f0 40       	sbci	r31, 0x00	; 0
 710:	53 95       	inc	r21
 712:	c9 f7       	brne	.-14     	; 0x706 <__addsf3x+0x4e>
 714:	7e f4       	brtc	.+30     	; 0x734 <__addsf3x+0x7c>
 716:	1f 16       	cp	r1, r31
 718:	ba 0b       	sbc	r27, r26
 71a:	62 0b       	sbc	r22, r18
 71c:	73 0b       	sbc	r23, r19
 71e:	84 0b       	sbc	r24, r20
 720:	ba f0       	brmi	.+46     	; 0x750 <__addsf3x+0x98>
 722:	91 50       	subi	r25, 0x01	; 1
 724:	a1 f0       	breq	.+40     	; 0x74e <__addsf3x+0x96>
 726:	ff 0f       	add	r31, r31
 728:	bb 1f       	adc	r27, r27
 72a:	66 1f       	adc	r22, r22
 72c:	77 1f       	adc	r23, r23
 72e:	88 1f       	adc	r24, r24
 730:	c2 f7       	brpl	.-16     	; 0x722 <__addsf3x+0x6a>
 732:	0e c0       	rjmp	.+28     	; 0x750 <__addsf3x+0x98>
 734:	ba 0f       	add	r27, r26
 736:	62 1f       	adc	r22, r18
 738:	73 1f       	adc	r23, r19
 73a:	84 1f       	adc	r24, r20
 73c:	48 f4       	brcc	.+18     	; 0x750 <__addsf3x+0x98>
 73e:	87 95       	ror	r24
 740:	77 95       	ror	r23
 742:	67 95       	ror	r22
 744:	b7 95       	ror	r27
 746:	f7 95       	ror	r31
 748:	9e 3f       	cpi	r25, 0xFE	; 254
 74a:	08 f0       	brcs	.+2      	; 0x74e <__addsf3x+0x96>
 74c:	b3 cf       	rjmp	.-154    	; 0x6b4 <__addsf3+0x1e>
 74e:	93 95       	inc	r25
 750:	88 0f       	add	r24, r24
 752:	08 f0       	brcs	.+2      	; 0x756 <__addsf3x+0x9e>
 754:	99 27       	eor	r25, r25
 756:	ee 0f       	add	r30, r30
 758:	97 95       	ror	r25
 75a:	87 95       	ror	r24
 75c:	08 95       	ret

0000075e <__divsf3>:
 75e:	0c d0       	rcall	.+24     	; 0x778 <__divsf3x>
 760:	82 c0       	rjmp	.+260    	; 0x866 <__fp_round>
 762:	7a d0       	rcall	.+244    	; 0x858 <__fp_pscB>
 764:	40 f0       	brcs	.+16     	; 0x776 <__divsf3+0x18>
 766:	71 d0       	rcall	.+226    	; 0x84a <__fp_pscA>
 768:	30 f0       	brcs	.+12     	; 0x776 <__divsf3+0x18>
 76a:	21 f4       	brne	.+8      	; 0x774 <__divsf3+0x16>
 76c:	5f 3f       	cpi	r21, 0xFF	; 255
 76e:	19 f0       	breq	.+6      	; 0x776 <__divsf3+0x18>
 770:	1b ce       	rjmp	.-970    	; 0x3a8 <__fp_inf>
 772:	51 11       	cpse	r21, r1
 774:	6a ce       	rjmp	.-812    	; 0x44a <__fp_szero>
 776:	1e ce       	rjmp	.-964    	; 0x3b4 <__fp_nan>

00000778 <__divsf3x>:
 778:	45 de       	rcall	.-886    	; 0x404 <__fp_split3>
 77a:	98 f3       	brcs	.-26     	; 0x762 <__divsf3+0x4>

0000077c <__divsf3_pse>:
 77c:	99 23       	and	r25, r25
 77e:	c9 f3       	breq	.-14     	; 0x772 <__divsf3+0x14>
 780:	55 23       	and	r21, r21
 782:	b1 f3       	breq	.-20     	; 0x770 <__divsf3+0x12>
 784:	95 1b       	sub	r25, r21
 786:	55 0b       	sbc	r21, r21
 788:	bb 27       	eor	r27, r27
 78a:	aa 27       	eor	r26, r26
 78c:	62 17       	cp	r22, r18
 78e:	73 07       	cpc	r23, r19
 790:	84 07       	cpc	r24, r20
 792:	38 f0       	brcs	.+14     	; 0x7a2 <__divsf3_pse+0x26>
 794:	9f 5f       	subi	r25, 0xFF	; 255
 796:	5f 4f       	sbci	r21, 0xFF	; 255
 798:	22 0f       	add	r18, r18
 79a:	33 1f       	adc	r19, r19
 79c:	44 1f       	adc	r20, r20
 79e:	aa 1f       	adc	r26, r26
 7a0:	a9 f3       	breq	.-22     	; 0x78c <__divsf3_pse+0x10>
 7a2:	33 d0       	rcall	.+102    	; 0x80a <__divsf3_pse+0x8e>
 7a4:	0e 2e       	mov	r0, r30
 7a6:	3a f0       	brmi	.+14     	; 0x7b6 <__divsf3_pse+0x3a>
 7a8:	e0 e8       	ldi	r30, 0x80	; 128
 7aa:	30 d0       	rcall	.+96     	; 0x80c <__divsf3_pse+0x90>
 7ac:	91 50       	subi	r25, 0x01	; 1
 7ae:	50 40       	sbci	r21, 0x00	; 0
 7b0:	e6 95       	lsr	r30
 7b2:	00 1c       	adc	r0, r0
 7b4:	ca f7       	brpl	.-14     	; 0x7a8 <__divsf3_pse+0x2c>
 7b6:	29 d0       	rcall	.+82     	; 0x80a <__divsf3_pse+0x8e>
 7b8:	fe 2f       	mov	r31, r30
 7ba:	27 d0       	rcall	.+78     	; 0x80a <__divsf3_pse+0x8e>
 7bc:	66 0f       	add	r22, r22
 7be:	77 1f       	adc	r23, r23
 7c0:	88 1f       	adc	r24, r24
 7c2:	bb 1f       	adc	r27, r27
 7c4:	26 17       	cp	r18, r22
 7c6:	37 07       	cpc	r19, r23
 7c8:	48 07       	cpc	r20, r24
 7ca:	ab 07       	cpc	r26, r27
 7cc:	b0 e8       	ldi	r27, 0x80	; 128
 7ce:	09 f0       	breq	.+2      	; 0x7d2 <__divsf3_pse+0x56>
 7d0:	bb 0b       	sbc	r27, r27
 7d2:	80 2d       	mov	r24, r0
 7d4:	bf 01       	movw	r22, r30
 7d6:	ff 27       	eor	r31, r31
 7d8:	93 58       	subi	r25, 0x83	; 131
 7da:	5f 4f       	sbci	r21, 0xFF	; 255
 7dc:	2a f0       	brmi	.+10     	; 0x7e8 <__divsf3_pse+0x6c>
 7de:	9e 3f       	cpi	r25, 0xFE	; 254
 7e0:	51 05       	cpc	r21, r1
 7e2:	68 f0       	brcs	.+26     	; 0x7fe <__divsf3_pse+0x82>
 7e4:	e1 cd       	rjmp	.-1086   	; 0x3a8 <__fp_inf>
 7e6:	31 ce       	rjmp	.-926    	; 0x44a <__fp_szero>
 7e8:	5f 3f       	cpi	r21, 0xFF	; 255
 7ea:	ec f3       	brlt	.-6      	; 0x7e6 <__divsf3_pse+0x6a>
 7ec:	98 3e       	cpi	r25, 0xE8	; 232
 7ee:	dc f3       	brlt	.-10     	; 0x7e6 <__divsf3_pse+0x6a>
 7f0:	86 95       	lsr	r24
 7f2:	77 95       	ror	r23
 7f4:	67 95       	ror	r22
 7f6:	b7 95       	ror	r27
 7f8:	f7 95       	ror	r31
 7fa:	9f 5f       	subi	r25, 0xFF	; 255
 7fc:	c9 f7       	brne	.-14     	; 0x7f0 <__divsf3_pse+0x74>
 7fe:	88 0f       	add	r24, r24
 800:	91 1d       	adc	r25, r1
 802:	96 95       	lsr	r25
 804:	87 95       	ror	r24
 806:	97 f9       	bld	r25, 7
 808:	08 95       	ret
 80a:	e1 e0       	ldi	r30, 0x01	; 1
 80c:	66 0f       	add	r22, r22
 80e:	77 1f       	adc	r23, r23
 810:	88 1f       	adc	r24, r24
 812:	bb 1f       	adc	r27, r27
 814:	62 17       	cp	r22, r18
 816:	73 07       	cpc	r23, r19
 818:	84 07       	cpc	r24, r20
 81a:	ba 07       	cpc	r27, r26
 81c:	20 f0       	brcs	.+8      	; 0x826 <__divsf3_pse+0xaa>
 81e:	62 1b       	sub	r22, r18
 820:	73 0b       	sbc	r23, r19
 822:	84 0b       	sbc	r24, r20
 824:	ba 0b       	sbc	r27, r26
 826:	ee 1f       	adc	r30, r30
 828:	88 f7       	brcc	.-30     	; 0x80c <__divsf3_pse+0x90>
 82a:	e0 95       	com	r30
 82c:	08 95       	ret

0000082e <__fp_mpack>:
 82e:	9f 3f       	cpi	r25, 0xFF	; 255
 830:	31 f0       	breq	.+12     	; 0x83e <__fp_mpack_finite+0xc>

00000832 <__fp_mpack_finite>:
 832:	91 50       	subi	r25, 0x01	; 1
 834:	20 f4       	brcc	.+8      	; 0x83e <__fp_mpack_finite+0xc>
 836:	87 95       	ror	r24
 838:	77 95       	ror	r23
 83a:	67 95       	ror	r22
 83c:	b7 95       	ror	r27
 83e:	88 0f       	add	r24, r24
 840:	91 1d       	adc	r25, r1
 842:	96 95       	lsr	r25
 844:	87 95       	ror	r24
 846:	97 f9       	bld	r25, 7
 848:	08 95       	ret

0000084a <__fp_pscA>:
 84a:	00 24       	eor	r0, r0
 84c:	0a 94       	dec	r0
 84e:	16 16       	cp	r1, r22
 850:	17 06       	cpc	r1, r23
 852:	18 06       	cpc	r1, r24
 854:	09 06       	cpc	r0, r25
 856:	08 95       	ret

00000858 <__fp_pscB>:
 858:	00 24       	eor	r0, r0
 85a:	0a 94       	dec	r0
 85c:	12 16       	cp	r1, r18
 85e:	13 06       	cpc	r1, r19
 860:	14 06       	cpc	r1, r20
 862:	05 06       	cpc	r0, r21
 864:	08 95       	ret

00000866 <__fp_round>:
 866:	09 2e       	mov	r0, r25
 868:	03 94       	inc	r0
 86a:	00 0c       	add	r0, r0
 86c:	11 f4       	brne	.+4      	; 0x872 <__fp_round+0xc>
 86e:	88 23       	and	r24, r24
 870:	52 f0       	brmi	.+20     	; 0x886 <__fp_round+0x20>
 872:	bb 0f       	add	r27, r27
 874:	40 f4       	brcc	.+16     	; 0x886 <__fp_round+0x20>
 876:	bf 2b       	or	r27, r31
 878:	11 f4       	brne	.+4      	; 0x87e <__fp_round+0x18>
 87a:	60 ff       	sbrs	r22, 0
 87c:	04 c0       	rjmp	.+8      	; 0x886 <__fp_round+0x20>
 87e:	6f 5f       	subi	r22, 0xFF	; 255
 880:	7f 4f       	sbci	r23, 0xFF	; 255
 882:	8f 4f       	sbci	r24, 0xFF	; 255
 884:	9f 4f       	sbci	r25, 0xFF	; 255
 886:	08 95       	ret
 888:	0e f0       	brts	.+2      	; 0x88c <__fp_round+0x26>
 88a:	d1 cf       	rjmp	.-94     	; 0x82e <__fp_mpack>
 88c:	93 cd       	rjmp	.-1242   	; 0x3b4 <__fp_nan>
 88e:	68 94       	set
 890:	8b cd       	rjmp	.-1258   	; 0x3a8 <__fp_inf>

00000892 <log>:
 892:	c0 dd       	rcall	.-1152   	; 0x414 <__fp_splitA>
 894:	c8 f3       	brcs	.-14     	; 0x888 <__fp_round+0x22>
 896:	99 23       	and	r25, r25
 898:	d1 f3       	breq	.-12     	; 0x88e <__fp_round+0x28>
 89a:	c6 f3       	brts	.-16     	; 0x88c <__fp_round+0x26>
 89c:	df 93       	push	r29
 89e:	cf 93       	push	r28
 8a0:	1f 93       	push	r17
 8a2:	0f 93       	push	r16
 8a4:	ff 92       	push	r15
 8a6:	c9 2f       	mov	r28, r25
 8a8:	dd 27       	eor	r29, r29
 8aa:	88 23       	and	r24, r24
 8ac:	2a f0       	brmi	.+10     	; 0x8b8 <log+0x26>
 8ae:	21 97       	sbiw	r28, 0x01	; 1
 8b0:	66 0f       	add	r22, r22
 8b2:	77 1f       	adc	r23, r23
 8b4:	88 1f       	adc	r24, r24
 8b6:	da f7       	brpl	.-10     	; 0x8ae <log+0x1c>
 8b8:	20 e0       	ldi	r18, 0x00	; 0
 8ba:	30 e0       	ldi	r19, 0x00	; 0
 8bc:	40 e8       	ldi	r20, 0x80	; 128
 8be:	5f eb       	ldi	r21, 0xBF	; 191
 8c0:	9f e3       	ldi	r25, 0x3F	; 63
 8c2:	88 39       	cpi	r24, 0x98	; 152
 8c4:	20 f0       	brcs	.+8      	; 0x8ce <log+0x3c>
 8c6:	80 3e       	cpi	r24, 0xE0	; 224
 8c8:	30 f0       	brcs	.+12     	; 0x8d6 <log+0x44>
 8ca:	21 96       	adiw	r28, 0x01	; 1
 8cc:	8f 77       	andi	r24, 0x7F	; 127
 8ce:	e3 de       	rcall	.-570    	; 0x696 <__addsf3>
 8d0:	e4 eb       	ldi	r30, 0xB4	; 180
 8d2:	f0 e0       	ldi	r31, 0x00	; 0
 8d4:	03 c0       	rjmp	.+6      	; 0x8dc <log+0x4a>
 8d6:	df de       	rcall	.-578    	; 0x696 <__addsf3>
 8d8:	e1 ee       	ldi	r30, 0xE1	; 225
 8da:	f0 e0       	ldi	r31, 0x00	; 0
 8dc:	6e dd       	rcall	.-1316   	; 0x3ba <__fp_powser>
 8de:	8b 01       	movw	r16, r22
 8e0:	be 01       	movw	r22, r28
 8e2:	ec 01       	movw	r28, r24
 8e4:	fb 2e       	mov	r15, r27
 8e6:	6f 57       	subi	r22, 0x7F	; 127
 8e8:	71 09       	sbc	r23, r1
 8ea:	75 95       	asr	r23
 8ec:	77 1f       	adc	r23, r23
 8ee:	88 0b       	sbc	r24, r24
 8f0:	99 0b       	sbc	r25, r25
 8f2:	1f dd       	rcall	.-1474   	; 0x332 <__floatsisf>
 8f4:	28 e1       	ldi	r18, 0x18	; 24
 8f6:	32 e7       	ldi	r19, 0x72	; 114
 8f8:	41 e3       	ldi	r20, 0x31	; 49
 8fa:	5f e3       	ldi	r21, 0x3F	; 63
 8fc:	28 de       	rcall	.-944    	; 0x54e <__mulsf3x>
 8fe:	af 2d       	mov	r26, r15
 900:	98 01       	movw	r18, r16
 902:	ae 01       	movw	r20, r28
 904:	ff 90       	pop	r15
 906:	0f 91       	pop	r16
 908:	1f 91       	pop	r17
 90a:	cf 91       	pop	r28
 90c:	df 91       	pop	r29
 90e:	d4 de       	rcall	.-600    	; 0x6b8 <__addsf3x>
 910:	aa cf       	rjmp	.-172    	; 0x866 <__fp_round>

00000912 <_exit>:
 912:	f8 94       	cli

00000914 <__stop_program>:
 914:	ff cf       	rjmp	.-2      	; 0x914 <__stop_program>
